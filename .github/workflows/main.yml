name: build-containers
on: [push]

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: [ linux, x64, self-hosted ]
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: ${{ github.repository }}/checks_with_gcc

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: create Dockerfile and context
        run: tmp=${{ runner.temp }} BUILD_NAME="checks with gcc" ci/00-docker-build.sh

      - name: list files
        run: find ${{ runner.temp }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ${{ runner.temp }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  checks:
    runs-on: [self-hosted, linux, x64]
    strategy:
      matrix:
        instance: [
          [ 'with gcc', 'gcc:latest' ],
          [ 'on alpine system with gcc', 'alpine:latest' ],
          [ 'on debian system with 32-bit gcc', 'debian' ],
          [ 'on ubuntu system with gcc', 'ubuntu:latest' ],
          [ 'on ubuntu rolling system with gcc', 'ubuntu:rolling' ],
          [ 'on debian testing system with 32-bit gcc', 'debian:testing' ],
          [ 'using cmake directly with gcc', 'alpine' ],
          [ 'on debian system with gcc', 'debian:latest' ],
          [ 'on debian testing system with gcc', 'debian:testing' ],
          [ 'shared libs on debian testing system with gcc', 'debian:testing' ],
          [ 'on debian10 system with gcc', 'debian:10' ],
          [ 'on debian9 system with gcc', 'debian:9' ],
          # opensuse does not have tar installed, so that
          # actions/checkout fails.
          # [ 'on opensuse system with gcc', 'opensuse/leap' ],
          [ 'on fedora system with gcc', 'fedora:latest' ],
          [ 'on centos system with gcc', 'quay.io/centos/centos:stream' ],
          [ 'on centos9 system with gcc', 'quay.io/centos/centos:stream9' ],
          [ 'with clang13', 'silkeh/clang:13' ],
          [ 'with clangdev', 'silkeh/clang:dev' ],
          [ 'with icc', 'intel/oneapi-hpckit:latest' ],
          [ 'expensive with gcc', 'gcc:latest' ]
        ]
    container:
      image: ${{ matrix.instance[1] }}
    env:
      BUILD_NAME: 'checks ${{ matrix.instance[0] }}'
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test-suite
