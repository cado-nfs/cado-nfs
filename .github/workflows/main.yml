name: build-containers
on: [push]

env:
  REGISTRY: ghcr.io

jobs:
  prepare:
    runs-on: [self-hosted, linux, x64]
    strategy:
      matrix:
        instance: [
          [ 'with gcc', 'gcc:latest' ],
          [ 'on alpine system with gcc', 'alpine:latest' ],
          [ 'on debian system with 32-bit gcc', 'debian' ],
          [ 'on opensuse system with gcc', 'opensuse/leap' ],
        ]
    env:
      BUILD_NAME: 'checks ${{ matrix.instance[0] }}'
    container:
      image: debian
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/prepare-containers.yml
        with:
          job-name: ${{ env.BUILD_NAME }}
          registry: ${{ env.REGISTRY }}

  checks:
    runs-on: [self-hosted, linux, x64]
    needs: prepare
    strategy:
      matrix:
        instance: [
          [ 'with gcc', 'gcc:latest' ],
          [ 'on alpine system with gcc', 'alpine:latest' ],
          [ 'on debian system with 32-bit gcc', 'debian' ],
#           [ 'on ubuntu system with gcc', 'ubuntu:latest' ],
#           [ 'on ubuntu rolling system with gcc', 'ubuntu:rolling' ],
#           [ 'on debian testing system with 32-bit gcc', 'debian:testing' ],
#           [ 'using cmake directly with gcc', 'alpine' ],
#           [ 'on debian system with gcc', 'debian:latest' ],
#           [ 'on debian testing system with gcc', 'debian:testing' ],
#           [ 'shared libs on debian testing system with gcc', 'debian:testing' ],
#           [ 'on debian10 system with gcc', 'debian:10' ],
#           [ 'on debian9 system with gcc', 'debian:9' ],
#           # opensuse does not have tar installed, so that
#           # actions/checkout fails.
            [ 'on opensuse system with gcc', 'opensuse/leap' ],
#           [ 'on fedora system with gcc', 'fedora:latest' ],
#           [ 'on centos system with gcc', 'quay.io/centos/centos:stream' ],
#           [ 'on centos9 system with gcc', 'quay.io/centos/centos:stream9' ],
#           [ 'with clang13', 'silkeh/clang:13' ],
#           [ 'with clangdev', 'silkeh/clang:dev' ],
#           [ 'with icc', 'intel/oneapi-hpckit:latest' ],
#           [ 'expensive with gcc', 'gcc:latest' ]
        ]
    env:
      BUILD_NAME: 'checks ${{ matrix.instance[0] }}'
    container:
      image: 'ghcr.io/${{ github.repository }}/checks ${{ matrix.instance[0] }}'
      # image: '${{ env.REGISTRY }}/${{ github.repository }}/${{ env.BUILD_NAME }}'
      # image: ${{ matrix.instance[1] }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test-suite
